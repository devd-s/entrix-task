{
 "Resources": {
  "OrderResultsBucket35E2B63A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": {
     "Fn::Join": [
      "",
      [
       "entrix-order-results-dev-",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/OrderResultsBucket/Resource"
   }
  },
  "OrderResultsBucketPolicyF63FD395": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "OrderResultsBucket35E2B63A"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrderResultsBucket35E2B63A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrderResultsBucket35E2B63A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/OrderResultsBucket/Policy/Resource"
   }
  },
  "OrderResultsBucketAutoDeleteObjectsCustomResource96AB698A": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "OrderResultsBucket35E2B63A"
    }
   },
   "DependsOn": [
    "OrderResultsBucketPolicyF63FD395"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/OrderResultsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-844682013548-eu-west-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "OrderResultsBucket35E2B63A"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "OrdersTable315BB997": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "record_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "record_id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "entrix-orders-dev",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/OrdersTable/Resource"
   }
  },
  "ErrorNotificationTopic0DACB6F3": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Error Notifications for Energy Auction Issues",
    "TopicName": "error-notifications-dev"
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/ErrorNotificationTopic/Resource"
   }
  },
  "ErrorNotificationTopicdevopsteamcompanycom0033BDEF": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": "devops-team@company.com",
    "Protocol": "email",
    "TopicArn": {
     "Ref": "ErrorNotificationTopic0DACB6F3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/ErrorNotificationTopic/devops-team@company.com/Resource"
   }
  },
  "EntrixPostLambdaServiceRoleB775C877": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EntrixPostLambda/ServiceRole/Resource"
   }
  },
  "EntrixPostLambdaServiceRoleDefaultPolicy6FF0B3FC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrdersTable315BB997",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EntrixPostLambdaServiceRoleDefaultPolicy6FF0B3FC",
    "Roles": [
     {
      "Ref": "EntrixPostLambdaServiceRoleB775C877"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EntrixPostLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EntrixPostLambda9606C18F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-844682013548-eu-west-1",
     "S3Key": "80fa0d4324672b78795ef93afd3e285b10fc25af2b1fce33f72b00891ea0f29d.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "OrdersTable315BB997"
      },
      "DYNAMODB_FLOAT_SERIALIZER": "use_decimal"
     }
    },
    "Handler": "app.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "EntrixPostLambdaServiceRoleB775C877",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "EntrixPostLambdaServiceRoleDefaultPolicy6FF0B3FC",
    "EntrixPostLambdaServiceRoleB775C877"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EntrixPostLambda/Resource",
    "aws:asset:path": "asset.80fa0d4324672b78795ef93afd3e285b10fc25af2b1fce33f72b00891ea0f29d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LambdaAServiceRole22081E46": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/LambdaA/ServiceRole/Resource"
   }
  },
  "LambdaAE814F098": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-844682013548-eu-west-1",
     "S3Key": "3f7f6036e4da3bebf9ad731eda4ef80c26f7103aba18080076b49f568181686d.zip"
    },
    "Handler": "app.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaAServiceRole22081E46",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaAServiceRole22081E46"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/LambdaA/Resource",
    "aws:asset:path": "asset.3f7f6036e4da3bebf9ad731eda4ef80c26f7103aba18080076b49f568181686d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LambdaBServiceRole054CD0BC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/LambdaB/ServiceRole/Resource"
   }
  },
  "LambdaBServiceRoleDefaultPolicy42ED4EA2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrderResultsBucket35E2B63A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrderResultsBucket35E2B63A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaBServiceRoleDefaultPolicy42ED4EA2",
    "Roles": [
     {
      "Ref": "LambdaBServiceRole054CD0BC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/LambdaB/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaB855AF8F0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-844682013548-eu-west-1",
     "S3Key": "ea9355f5fdc02d8ba30b3d89d63859ff1b7fd964e77e9874571a0a080133ddba.zip"
    },
    "Environment": {
     "Variables": {
      "LOG_BUCKET": {
       "Ref": "OrderResultsBucket35E2B63A"
      }
     }
    },
    "Handler": "app.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaBServiceRole054CD0BC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaBServiceRoleDefaultPolicy42ED4EA2",
    "LambdaBServiceRole054CD0BC"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/LambdaB/Resource",
    "aws:asset:path": "asset.ea9355f5fdc02d8ba30b3d89d63859ff1b7fd964e77e9874571a0a080133ddba",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SlackNotificationLambdaServiceRoleA0CCE128": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/SlackNotificationLambda/ServiceRole/Resource"
   }
  },
  "SlackNotificationLambda2FCE26D7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nimport json\nimport urllib3\nimport os\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Process SNS notification and send formatted message to Slack\n    \"\"\"\n    # Parse SNS message\n    sns_message = json.loads(event['Records'][0]['Sns']['Message'])\n    \n    # Get Slack webhook URL from environment (would be set in real deployment)\n    slack_webhook_url = os.environ.get('SLACK_WEBHOOK_URL', 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK')\n    \n    # Format Slack message\n    slack_payload = {\n        \"text\": f\"🚨 *{sns_message.get('alert', 'Error Alert')}*\",\n        \"blocks\": [\n            {\n                \"type\": \"header\",\n                \"text\": {\n                    \"type\": \"plain_text\",\n                    \"text\": f\"🚨 {sns_message.get('service', 'Service')} Alert\"\n                }\n            },\n            {\n                \"type\": \"section\",\n                \"fields\": [\n                    {\n                        \"type\": \"mrkdwn\",\n                        \"text\": f\"*Environment:*\\n{sns_message.get('environment', 'unknown')}\"\n                    },\n                    {\n                        \"type\": \"mrkdwn\", \n                        \"text\": f\"*Error:*\\n{sns_message.get('error', 'Unknown error')}\"\n                    },\n                    {\n                        \"type\": \"mrkdwn\",\n                        \"text\": f\"*Execution:*\\n{sns_message.get('executionName', 'N/A')}\"\n                    },\n                    {\n                        \"type\": \"mrkdwn\",\n                        \"text\": f\"*Timestamp:*\\n{sns_message.get('timestamp', 'N/A')}\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"section\",\n                \"text\": {\n                    \"type\": \"mrkdwn\",\n                    \"text\": f\"*Error Details:*\\n```{sns_message.get('errorDetails', 'No details available')}```\"\n                }\n            },\n            {\n                \"type\": \"context\",\n                \"elements\": [\n                    {\n                        \"type\": \"mrkdwn\",\n                        \"text\": f\"Region: {sns_message.get('region', 'N/A')} | State Machine: {sns_message.get('stateMachineArn', 'N/A')}\"\n                    }\n                ]\n            }\n        ]\n    }\n    \n    # Send to Slack (in production, you'd use the actual webhook)\n    http = urllib3.PoolManager()\n    \n    try:\n        response = http.request(\n            'POST',\n            slack_webhook_url,\n            body=json.dumps(slack_payload),\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        print(f\"Slack notification sent successfully. Status: {response.status}\")\n        print(f\"Payload: {json.dumps(slack_payload, indent=2)}\")\n        \n        return {\n            'statusCode': 200,\n            'body': json.dumps({\n                'message': 'Notification sent successfully',\n                'slack_response_status': response.status\n            })\n        }\n        \n    except Exception as e:\n        print(f\"Failed to send Slack notification: {str(e)}\")\n        print(f\"Would have sent: {json.dumps(slack_payload, indent=2)}\")\n        \n        return {\n            'statusCode': 500,\n            'body': json.dumps({\n                'error': 'Failed to send notification',\n                'details': str(e)\n            })\n        }\n      "
    },
    "Description": "Sends formatted error notifications to Slack channel",
    "Environment": {
     "Variables": {
      "SLACK_WEBHOOK_URL": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
     }
    },
    "Handler": "index.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "SlackNotificationLambdaServiceRoleA0CCE128",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "SlackNotificationLambdaServiceRoleA0CCE128"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/SlackNotificationLambda/Resource"
   }
  },
  "SlackNotificationLambdaAllowInvokeEntrixEnergyAuctionStackdevErrorNotificationTopic3DC73D50C614BB45": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SlackNotificationLambda2FCE26D7",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "ErrorNotificationTopic0DACB6F3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/SlackNotificationLambda/AllowInvoke:EntrixEnergyAuctionStackdevErrorNotificationTopic3DC73D50"
   }
  },
  "SlackNotificationLambdaErrorNotificationTopic644B3132": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "SlackNotificationLambda2FCE26D7",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "ErrorNotificationTopic0DACB6F3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/SlackNotificationLambda/ErrorNotificationTopic/Resource"
   }
  },
  "EnergyAuctionApi74C6D117": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for energy auction orders",
    "Name": "entrix-energy-auction-api-dev"
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Resource"
   }
  },
  "EnergyAuctionApiDeploymentF954A87F63ce5fa2ba1d99d2a02ce834db60b98b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for energy auction orders",
    "RestApiId": {
     "Ref": "EnergyAuctionApi74C6D117"
    }
   },
   "DependsOn": [
    "EnergyAuctionApiordersPOST7ED75AC6",
    "EnergyAuctionApiorders6FDFD0A8"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "EnergyAuctionApiDeploymentStagedevF5C882AC": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "EnergyAuctionApiDeploymentF954A87F63ce5fa2ba1d99d2a02ce834db60b98b"
    },
    "RestApiId": {
     "Ref": "EnergyAuctionApi74C6D117"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/DeploymentStage.dev/Resource"
   }
  },
  "EnergyAuctionApiorders6FDFD0A8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "EnergyAuctionApi74C6D117",
      "RootResourceId"
     ]
    },
    "PathPart": "orders",
    "RestApiId": {
     "Ref": "EnergyAuctionApi74C6D117"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Default/orders/Resource"
   }
  },
  "EnergyAuctionApiordersPOSTApiPermissionEntrixEnergyAuctionStackdevEnergyAuctionApi1F85CCB5POSTorders3803E7C0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EntrixPostLambda9606C18F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:844682013548:",
       {
        "Ref": "EnergyAuctionApi74C6D117"
       },
       "/",
       {
        "Ref": "EnergyAuctionApiDeploymentStagedevF5C882AC"
       },
       "/POST/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Default/orders/POST/ApiPermission.EntrixEnergyAuctionStackdevEnergyAuctionApi1F85CCB5.POST..orders"
   }
  },
  "EnergyAuctionApiordersPOSTApiPermissionTestEntrixEnergyAuctionStackdevEnergyAuctionApi1F85CCB5POSTordersCC84F867": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EntrixPostLambda9606C18F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:844682013548:",
       {
        "Ref": "EnergyAuctionApi74C6D117"
       },
       "/test-invoke-stage/POST/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Default/orders/POST/ApiPermission.Test.EntrixEnergyAuctionStackdevEnergyAuctionApi1F85CCB5.POST..orders"
   }
  },
  "EnergyAuctionApiordersPOST7ED75AC6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EntrixPostLambda9606C18F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "EnergyAuctionApiorders6FDFD0A8"
    },
    "RestApiId": {
     "Ref": "EnergyAuctionApi74C6D117"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/EnergyAuctionApi/Default/orders/POST/Resource"
   }
  },
  "DataPipelineStateMachineRoleCEB53571": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineStateMachine/Role/Resource"
   }
  },
  "DataPipelineStateMachineRoleDefaultPolicy698F22D8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LambdaAE814F098",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LambdaB855AF8F0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaAE814F098",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaB855AF8F0",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ErrorNotificationTopic0DACB6F3"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DataPipelineStateMachineRoleDefaultPolicy698F22D8",
    "Roles": [
     {
      "Ref": "DataPipelineStateMachineRoleCEB53571"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "DataPipelineStateMachineA0BAC8C1": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"InitializeAttempt\",\"States\":{\"InitializeAttempt\":{\"Type\":\"Pass\",\"Result\":{\"attempt\":1},\"ResultPath\":\"$.attempt\",\"Next\":\"InvokeLambdaA\"},\"InvokeLambdaA\":{\"Next\":\"CheckResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaAE814F098",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"attempt.$\":\"$.attempt\",\"input.$\":\"$\"}}},\"CheckResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.results\",\"BooleanEquals\":false,\"Next\":\"IncrementAttempt\"}],\"Default\":\"ProcessOrders\"},\"ProcessOrders\":{\"Type\":\"Map\",\"Next\":\"ProcessingComplete\",\"ItemsPath\":\"$.orders\",\"MaxConcurrency\":10,\"Iterator\":{\"StartAt\":\"TransformForLambdaB\",\"States\":{\"TransformForLambdaB\":{\"Type\":\"Pass\",\"Parameters\":{\"status.$\":\"$.order\",\"id.$\":\"$.id\",\"timestamp.$\":\"$.timestamp\",\"data.$\":\"$\"},\"Next\":\"InvokeLambdaB\"},\"InvokeLambdaB\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.TaskFailed\"],\"ResultPath\":\"$.error\",\"Next\":\"SendErrorNotification\"}],\"Type\":\"Task\",\"InputPath\":\"$\",\"ResultPath\":\"$.result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaB855AF8F0",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"SendErrorNotification\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::sns:publish\",\"Parameters\":{\"TopicArn\":\"",
       {
        "Ref": "ErrorNotificationTopic0DACB6F3"
       },
       "\",\"Message\":{\"alert\":\"🚨 Lambda B Error\",\"environment\":\"dev\",\"service\":\"Energy Auction Processing\",\"error\":\"Lambda B failed to process order\",\"errorDetails.$\":\"$.error.Error\",\"failedOrder.$\":\"$.data\",\"executionName.$\":\"$$.Execution.Name\",\"timestamp.$\":\"$$.State.EnteredTime\",\"stateMachineArn.$\":\"$$.StateMachine.Name\",\"region\":\"eu-west-1\"},\"Subject\":\"🚨 Lambda B Processing Error\"}}}}},\"ProcessingComplete\":{\"Type\":\"Succeed\"},\"IncrementAttempt\":{\"Type\":\"Pass\",\"Parameters\":{\"attempt.$\":\"States.MathAdd($.attempt, 1)\",\"input.$\":\"$\"},\"Next\":\"CheckMaxRetries\"},\"CheckMaxRetries\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.attempt\",\"NumericGreaterThan\":5,\"Next\":\"MaxRetriesExceeded\"}],\"Default\":\"InvokeLambdaA\"},\"MaxRetriesExceeded\":{\"Type\":\"Fail\",\"Error\":\"LambdaAMaxRetries\",\"Cause\":\"Lambda A failed to return true results after 5 attempts\"}},\"TimeoutSeconds\":900}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "DataPipelineStateMachineRoleCEB53571",
      "Arn"
     ]
    },
    "StateMachineName": "entrix-data-pipeline-dev"
   },
   "DependsOn": [
    "DataPipelineStateMachineRoleDefaultPolicy698F22D8",
    "DataPipelineStateMachineRoleCEB53571"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineStateMachine/Resource"
   }
  },
  "DataPipelineStateMachineEventsRoleC7573D65": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineStateMachine/EventsRole/Resource"
   }
  },
  "DataPipelineStateMachineEventsRoleDefaultPolicy1D74FEDB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "DataPipelineStateMachineA0BAC8C1"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DataPipelineStateMachineEventsRoleDefaultPolicy1D74FEDB",
    "Roles": [
     {
      "Ref": "DataPipelineStateMachineEventsRoleC7573D65"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineStateMachine/EventsRole/DefaultPolicy/Resource"
   }
  },
  "DataPipelineSchedule2368DDC2": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Name": "data-pipeline-schedule-dev",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Ref": "DataPipelineStateMachineA0BAC8C1"
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "DataPipelineStateMachineEventsRoleC7573D65",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/DataPipelineSchedule/Resource"
   }
  },
  "BuildProjectRoleAA92C755": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/BuildProject/Role/Resource"
   }
  },
  "BuildProjectRoleDefaultPolicy3E9F248C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:eu-west-1:844682013548:log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:eu-west-1:844682013548:log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:codebuild:eu-west-1:844682013548:report-group/",
          {
           "Ref": "BuildProject097C5DB7"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucket22248F97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucket22248F97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineArtifactsBucketEncryptionKey01D58D69",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildProjectRoleDefaultPolicy3E9F248C",
    "Roles": [
     {
      "Ref": "BuildProjectRoleAA92C755"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/BuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "BuildProject097C5DB7": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "PipelineArtifactsBucketEncryptionKey01D58D69",
      "Arn"
     ]
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "Name": "energy-auction-build-dev",
    "ServiceRole": {
     "Fn::GetAtt": [
      "BuildProjectRoleAA92C755",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": \"18\"\n      },\n      \"commands\": [\n        \"npm install -g aws-cdk\",\n        \"npm ci\"\n      ]\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"cdk synth\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk deploy --require-approval never\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/BuildProject/Resource"
   }
  },
  "PipelineArtifactsBucketEncryptionKey01D58D69": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::844682013548:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/ArtifactsBucketEncryptionKey/Resource"
   }
  },
  "PipelineArtifactsBucketEncryptionKeyAlias5C510EEE": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/codepipeline-entrixenergyauctionstack-dev-pipeline-f2686bc6",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "PipelineArtifactsBucketEncryptionKey01D58D69",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
   }
  },
  "PipelineArtifactsBucket22248F97": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "PipelineArtifactsBucketEncryptionKey01D58D69",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/ArtifactsBucket/Resource"
   }
  },
  "PipelineArtifactsBucketPolicyD4F9712A": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "PipelineArtifactsBucket22248F97"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucket22248F97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucket22248F97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "PipelineRoleD68726F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicyC7A05455": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucket22248F97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucket22248F97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineArtifactsBucketEncryptionKey01D58D69",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
    "Roles": [
     {
      "Ref": "PipelineRoleD68726F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineC660917D": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "EncryptionKey": {
      "Id": {
       "Fn::GetAtt": [
        "PipelineArtifactsBucketEncryptionKey01D58D69",
        "Arn"
       ]
      },
      "Type": "KMS"
     },
     "Location": {
      "Ref": "PipelineArtifactsBucket22248F97"
     },
     "Type": "S3"
    },
    "Name": "entrix-energy-auction-pipeline-dev",
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleD68726F7",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeStarSourceConnection",
         "Version": "1"
        },
        "Configuration": {
         "ConnectionArn": "arn:aws:codeconnections:eu-west-1:844682013548:connection/2bdacb93-aec6-4509-b83f-5cb0aa78c25a",
         "FullRepositoryId": "devd-s/entrix-task",
         "BranchName": "master"
        },
        "Name": "GitHub_Source",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Source_GitHub_Source"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "BuildProject097C5DB7"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Source_GitHub_Source"
         }
        ],
        "Name": "CodeBuild",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Build_CodeBuild"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     }
    ]
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicyC7A05455",
    "PipelineRoleD68726F7"
   ],
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Resource"
   }
  },
  "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleD68726F7",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Source/GitHub_Source/CodePipelineActionRole/Resource"
   }
  },
  "PipelineSourceGitHubSourceCodePipelineActionRoleDefaultPolicyE64B1C38": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codestar-connections:UseConnection",
       "Effect": "Allow",
       "Resource": "arn:aws:codeconnections:eu-west-1:844682013548:connection/2bdacb93-aec6-4509-b83f-5cb0aa78c25a"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactsBucket22248F97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactsBucket22248F97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineArtifactsBucketEncryptionKey01D58D69",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "PipelineArtifactsBucket22248F97",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineSourceGitHubSourceCodePipelineActionRoleDefaultPolicyE64B1C38",
    "Roles": [
     {
      "Ref": "PipelineSourceGitHubSourceCodePipelineActionRole3B2287CE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Source/GitHub_Source/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleD68726F7",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Build/CodeBuild/CodePipelineActionRole/Resource"
   }
  },
  "PipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyD9C4A2F6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BuildProject097C5DB7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyD9C4A2F6",
    "Roles": [
     {
      "Ref": "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/Pipeline/Build/CodeBuild/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SXW/bMAz8LXtX1CLpH0gzFBi6YEbS90CW2YSxLAmmlCIw/N9HfbRJhz3xjjpTx5OXcvn4JB9/qA9a6K5fGGzltA9K94Jbh4lWcnqOuocgNu+2olIaZ1Bfb+3KC3lWBLPorlYNruORb6o1kLQZzIIscdN51LmZwT62pEf0AZ1N3Xs+C6OGtlNyeolWfyrucQPjgERZi2qQ086VG3O9mS2IHawOiggCyXUqQnk8qgAf6sqfAoW1x/x1hT/BG3cdwOYg7hiHdcz3FMB6F0cNKYAvUgcVvIVwcl1qFcRWAvj3ugodgqKew/md9/1lL64HsbfUxNYgnf5Ry6nhLcTm5JBHvyg0Yqs8R6k1QJfMBdgqfUL76fGLzwIuvACP2MWaVExPo10HbUTT8Wz0YFjajO4MOm9eYZH5en5TZknFs+gHnv4KOfdU1gYVJZLBPItNpOCG/8b0/YivvWAHY441P1iKG+3xW8Z/YvCRvVn2Js/0cFk+yRX/3WdCXIzRBhxA7kr9C+Af3hX6AgAA"
   },
   "Metadata": {
    "aws:cdk:path": "EntrixEnergyAuctionStack-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "EnergyAuctionApiEndpoint7E209AD4": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "EnergyAuctionApi74C6D117"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "EnergyAuctionApiDeploymentStagedevF5C882AC"
      },
      "/"
     ]
    ]
   }
  },
  "ApiEndpoint": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "EnergyAuctionApi74C6D117"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "EnergyAuctionApiDeploymentStagedevF5C882AC"
      },
      "/"
     ]
    ]
   }
  },
  "OrderResultsBucketName": {
   "Description": "S3 bucket name for order results",
   "Value": {
    "Ref": "OrderResultsBucket35E2B63A"
   }
  },
  "OrdersTableName": {
   "Description": "DynamoDB table name for orders",
   "Value": {
    "Ref": "OrdersTable315BB997"
   }
  },
  "StateMachineArn": {
   "Description": "Step Functions state machine ARN",
   "Value": {
    "Ref": "DataPipelineStateMachineA0BAC8C1"
   }
  },
  "PipelineName": {
   "Description": "AWS CodePipeline name",
   "Value": {
    "Ref": "PipelineC660917D"
   }
  },
  "BuildProjectName": {
   "Description": "CodeBuild project name",
   "Value": {
    "Ref": "BuildProject097C5DB7"
   }
  },
  "GitHubConnectionInfo": {
   "Description": "GitHub connection status",
   "Value": "arn:aws:codeconnections:eu-west-1:844682013548:connection/2bdacb93-aec6-4509-b83f-5cb0aa78c25a"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}